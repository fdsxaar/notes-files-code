更多的结构化命令

for var in list
do
   commands
done

说明 只要你愿意，也可以将do语句和for语句放在同一行，但必须用分号将其同列表中的值分
开：for var in list; do
for循环假定每个值都是用空格分割的；for命令用空格来划分列表中的每个值。如果在单独的数据值中有
空格，就必须用双引号将这些值圈起来。

单引号问题：
 使用转义字符（反斜线）来将单引号转义；
 使用双引号来定义用到单引号的值。

叫作内部字段分隔符（internal field separator）。
IFS环境变量定义了bash shell用作字段分隔符的一系列字符。默认情况下，bash shell会将下列字
符当作字段分隔符：
 空格
 制表符
 换行符
要解决这个问题，可以在shell脚本中临时更改IFS环境变量的值来限制被bash shell当作字段
分隔符的字符。例如，如果你想修改IFS的值，使其只能识别换行符，那就必须这么做：
IFS=$'\n'
注:换行符的指定方式  $'\n', 有$符号
IFS.OLD=$IFS
IFS=$'\n'
<在代码中使用新的IFS值>
IFS=$IFS.OLD
这就保证了在脚本的后续操作中使用的是IFS的默认

最后，可以用for命令来自动遍历目录中的文件。进行此操作时，必须在文件名或路径名中
使用通配符。它会强制shell使用文件扩展匹配。文件扩展匹配是生成匹配指定通配符的文件名或
路径名的过程。
if [ -f '$file' ]
在Linux中，目录名和文件名中包含空格当然是合法的，应该将$file变
量用双引号圈起来。如果不这么做，遇到含有空格的目录名或文件名时就会有错误产生。

13.2 C 语言风格的for 命令
bash中C语言风格的for循环的基本格式。
for (( variable assignment ; condition ; iteration process ))
for (( a = 1; a < 10; a++ ))
注意，有些部分并没有遵循bash shell标准的for命令：
 变量赋值可以有空格；
 条件中的变量不以美元符开头；
 迭代过程的算式未用expr命令格式。

while test command
do
   other commands
done
while命令中定义的test command和if-then语句中的格式一模一样。可
以使用任何普通的bash shell命令，或者用test命令进行条件测试，比如测试变量值。
while命令允许你在while语句行定义多个测试命令。只有最后一个测试命令的退出状态码
会被用来决定什么时候结束循环,每个测试命令都出现在单独的一行上。

until命令要求你指定一个通常返回非零退
出状态码的测试命令。只有测试命令的退出状态码不为0，bash shell才会执行循环中列出的命令。
一旦测试命令返回了退出状态码0，循环就结束了。
#用退出状态码似乎不对，util应该是条件测试
until test commands
do
    other commands
done

通常必须遍历存储在文件中的数据
 使用嵌套循环
 修改IFS环境变量
IFS.OLD=$IFS
IFS=$'\n'
for (())
    IFS=:
    for(())

在shell执行break命令时，它会尝试跳出当前正在执行的循环。

有时你在内部循环，但需要停止外部循环。break命令接受单个命令行参数值：
break n
其中n指定了要跳出的循环层级。默认情况下，n为1，表明跳出的是当前的循环。如果你将
n设为2，break命令就会停止下一级的外部循环

continue命令可以提前中止某次循环中的命令，但并不会完全终止整个循环;
跳过此次循环中剩余的命令，但整个循环还会继续。

可以对循环的输出使用管道或进行重定向。这可以通过在done命令
之后添加一个处理命令来实现。

while IFS=’,’ read –r userid name
read命令会自动读取.csv文本文件的下一行内容，所以不需要专门再写一个循环来处理。当
read命令返回FALSE时（也就是读取完整个文件时），while命令就会退出。
要想把数据从文件中送入while命令，只需在while命令尾部使用一个重定向符就可以了。

